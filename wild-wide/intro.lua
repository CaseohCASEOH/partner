--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local E={"\071\083\077\075\121\047\061\061";"\119\075\057\049\087\101\103\073\070\113\097\054\120\107\075\121";"\117\111\102\048\100\043\103\106\073\057\102\075\065\074\117\109\085\122\115\099","\048\078\101\114\097\048\088\098\084\072\089\085\072\082\100\073";"\100\047\074\111\122\078\067\061";"\106\120\089\107\083\090\055\102\070\101\108\065\119\113\057\055";"\055\085\097\057\108\110\097\055\053\098\087\074\082\118\061\061";"\079\081\049\074\073\099\087\051\078\052\080\049\114\100\080\101";"\088\111\076\069","\069\075\113\114\043\047\111\068\043\082\061\061";"\080\103\099\108\050\118\057\114\078\047\061\061","\112\076\049\069\108\067\057\047\101\116\061\061";"\077\121\106\103\057\090\081\100\102\104\101\071\110\105\114\108","\047\121\109\101\069\056\071\081\087\111\119\076\055\120\098\105\050\111\120\057";"\067\116\056\122\049\083\099\089","\067\081\100\118\079\047\061\061","\070\113\089\102\083\111\077\078","\119\075\048\111\099\115\077\111\083\074\122\051\106\051\083\111","\120\118\122\107\070\099\097\057\065\106\100\061","\086\113\110\119\087\068\100\054\083\115\069\079\115\117\053\085\119\115\056\065\050\080\090\084\069\106\051\072\055\105\085\119\109\118\061\061","\083\075\082\075\083\053\057\069\084\047\061\061";"\119\069\072\061","\067\119\055\082\122\107\115\057\075\048\069\066\118\048\097\067\069\078\079\108","\081\117\116\101\066\067\065\106\048\087\115\100\080\047\061\061";"\100\079\100\110\055\112\089\120\090\098\118\057\089\066\055\110","\106\066\084\078\112\113\084\103\090\051\084\085\104\120\084\102\112\051\090\061";"\066\067\074\081\051\076\115\061";"\106\066\117\086\055\067\079\090\116\104\047\061";"\118\101\068\055\112\105\108\055","\089\085\122\104\050\082\049\084\081\109\078\083\050\106\117\119","\099\120\114\052\104\111\089\102\112\051\090\061","\105\075\077\078\083\105\108\065\104\111\089\073\119\111\090\061","\118\051\077\067\119\101\088\052","\047\078\054\097\047\121\074\117\100\051\105\122\054\103\074\069\122\073\082\081\081\107\120\101\054\121\084\050\102\116\061\061";"\101\086\102\105\073\073\116\097\051\077\081\099\120\082\061\061";"\098\055\071\116\074\067\056\114\119\122\116\061";"\072\121\108\071\108\082\112\061","\117\084\089\050\099\053\072\085\117\074\068\102\120\066\083\078\119\118\061\061","\073\099\111\119\119\105\078\067\073\114\099\084\097\082\081\055\067\117\108\120";"\114\113\071\117\088\086\056\099\051\069\057\050\104\121\118\061","\110\106\076\097\120\078\116\111\068\087\072\114\056\099\057\118\043\048\070\106\109\086\118\100\086\101\055\086","\089\089\107\070\101\097\076\101\115\089\057\101\104\102\079\107";"\108\111\084\052\104\053\068\079\117\118\061\061";"\051\117\043\050\085\076\100\051\111\074\050\053\052\116\082\061","\083\051\075\065\104\111\057\087";"\082\065\103\087\101\080\051\073\050\113\074\048\070\104\119\049";"\116\108\075\081\078\047\061\061","\047\056\071\120\049\047\061\061","\043\110\085\074\065\111\067\100\109\054\099\101","\105\122\066\075\104\076\067\061";"\099\120\075\121\070\090\065\090\119\084\089\078\110\053\048\116\099\066\088\061";"\105\075\077\066\112\116\061\061","\088\082\099\047\113\079\118\109\121\088\048\065\080\118\061\061","\119\116\070\107\072\105\053\066\068\073\086\052\102\109\072\061";"\113\097\051\069\047\082\061\061";"\116\047\120\043","\108\120\114\075\119\118\061\061","\104\077\050\078\122\075\106\101\056\078\043\061","\117\087\073\082\104\089\047\065\116\054\048\116";"\104\053\068\101\119\115\100\052\084\090\068\111\084\052\048\110\083\047\061\061";"\113\119\105\086\105\116\082\080\086\086\089\078";"\116\076\069\112";"\080\099\106\055\117\075\066\106";"\070\051\084\115\119\120\084\115\112\105\108\065\112\113\085\055";"\121\052\089\054";"\052\097\071\085\050\083\072\056\065\055\098\116\070\110\099\113\070\111\084\114\090\100\100\061";"\054\051\072\116\056\052\081\089\043\065\078\116\100\116\061\061","\119\120\089\115\086\047\061\061";"\069\103\069\117\047\115\088\085\075\049\118\087\089\116\061\061","\082\122\122\098","\068\084\081\080\087\071\107\067\102\078\052\088\055\100\120\049";"\074\078\122\116\086\086\103\107\108\066\070\082\119\118\061\061","\083\113\085\079\119\101\088\061";"\050\112\086\111\076\075\069\115\112\107\054\083\073\108\099\120\104\100\066\087\086\097\107\101\099\106\043\056\067\112\075\073";"\106\066\084\078\112\113\084\103\090\051\084\085\104\120\084\102\112\051\084\098\083\105\055\116\119\051\055\102\104\047\061\061","\084\111\089\118\070\047\061\061";"\072\087\065\050";"\105\075\077\122\119\113\108\055\117\047\061\061";"\070\111\089\122\070\066\097\061";"\110\082\061\061";"\056\056\054\065\056\120\106\075\077\069\070\061","\098\122\065\076\069\121\078\120\121\049\047\090\065\071\049\090\112\073\055\085\109\051\087\061","\065\109\054\082";"\115\112\073\105\089\105\055\043\071\105\106\111\109\055\077\051\048\122\112\061","\119\115\082\114\099\115\055\083\084\053\097\101\084\069\048\116\110\072\043\061","\104\090\055\083\106\074\077\083\119\089\047\075\086\072\083\066\097\074\115\061","\100\072\085\069\077\056\105\102\109\054\116\061";"\097\122\117\117";"\068\098\079\081";"\067\087\047\078\101\098\097\100\084\121\112\061","\103\076\056\121\049\118\061\061";"\065\115\085\089\065\079\098\082\065\050\077\101\078\118\061\061","\051\050\117\055\049\109\084\112\053\081\077\072\098\071\080\114\102\057\087\068\051\107\115\118\106\121\111\107\068\118\061\061","\107\082\111\080\084\108\087\051\079\065\098\086\098\050\080\098","\102\074\098\098\075\055\115\084\050\048\055\050\072\047\061\061";"\083\105\068\103\119\101\088\061";"\067\079\077\120","\055\089\112\080\069\056\114\078","\104\111\084\121\090\074\097\075\097\051\089\112\099\101\072\116\090\066\072\061";"\114\119\077\071\066\073\120\111\070\065\109\114\084\118\056\089","\057\049\075\084\070\085\051\087\107\105\118\061";"\084\111\089\078\070\111\084\103\088\072\108\055\104\111\084\049\104\111\084\074\088\118\061\061","\120\088\069\072\084\075\102\107\085\072\079\083\075\118\061\061","\100\089\068\114\055\116\061\061","\119\114\054\107\047\070\076\104\110\100\088\120\075\078\102\065","\107\048\085\076\065\082\061\061";"\082\120\116\080","\081\089\053\119\104\069\075\084";"\101\088\072\049\102\115\101\069\047\099\070\078\110\118\061\061","\074\100\103\089\112\085\078\067\087\076\100\083\103\068\073\088\101\097\049\100";"\097\053\078\113\069\106\067\105","\106\103\075\077\067\072\070\116\085\070\069\121\082\082\061\061";"\050\107\047\111\056\116\082\112\089\076\112\087\071\114\104\048\043\111\047\080","\056\069\101\112\097\101\090\054";"\114\101\085\087\067\080\054\079\074\048\104\073","\070\090\065\074\118\090\100\114\097\089\084\079\120\066\065\084";"\099\084\084\052\070\090\068\107\083\115\065\050\099\049\112\116\086\047\061\061","\083\110\108\099\115\103\122\081\090\050\054\107\110\099\077\087";"\065\111\071\066\121\072\113\067\099\090\049\074\083\119\055\121\072\110\078\113\079\057\072\061";"\112\051\077\102\112\051\089\115";"\104\111\077\052\104\053\068\122\119\113\070\061","\104\051\083\076\108\069\083\079\120\069\074\043\099\120\078\122\106\082\061\061","\074\056\114\052\053\073\106\073\075\082\061\061","\115\108\110\097";"\119\115\102\122\053\111\108\065\080\109\078\109\072\107\090\088";"\079\114\102\100\097\047\115\109\077\072\098\055";"\083\118\051\102\108\043\113\119\074\078\099\098\103\072\075\072";"\097\087\090\103\075\111\106\054";"\085\053\065\114\051\082\061\061","\083\067\065\106\043\087\097\061","\080\111\079\113\114\083\090\057\067\098\067\122\082\082\061\061";"\105\078\057\107\089\047\061\061";"\065\115\043\075\051\115\098\116\068\076\073\083\065\053\075\072";"\108\051\084\115\090\051\084\103\104\113\055\049\083\118\061\061","\084\090\108\122\119\106\088\061","\114\116\088\072\077\066\120\052\122\086\049\053\066\081\088\115\043\080\070\055\111\075\099\082\106\085\086\115";"\110\056\100\047\116\081\121\089\107\050\066\087\067\100\085\049";"\070\111\057\065\119\111\116\061","\051\070\067\085\097\104\047\069\049\121\112\069\054\069\047\103\057\106\055\075\065\074\116\099\087\049\049\065\054\116\061\061","\090\111\085\065\117\118\061\061","\065\099\112\056\078\080\088\061","\056\118\113\075\056\043\065\121\052\074\112\061";"\083\078\082\100\048\082\061\061";"\102\050\073\049\055\118\047\061";"\118\110\099\102\088\085\117\080\088\047\109\053\082\087\120\043\075\086\065\119\083\047\061\061";"\068\121\049\105\047\072\112\061","\043\105\075\114\067\117\070\118\104\047\085\065","\052\120\075\072\068\082\061\061","\051\065\082\047";"\052\119\043\115\078\082\061\061";"\110\090\084\087\120\055\048\076\086\111\068\051\120\072\082\051\099\069\090\061";"\086\104\049\056\104\097\088\051\120\087\070\061","\100\056\053\104";"\077\083\103\073\071\074\051\049\116\101\115\108";"\103\070\100\083";"\070\082\102\107","\050\109\052\054\114\116\061\061";"\113\078\078\114\053\100\098\082\088\109\111\074\104\047\061\061";"\086\074\070\116\120\105\065\087\070\051\065\087\084\052\065\090\104\111\090\061","\080\116\053\118\090\088\065\053\107\101\083\065\106\049\100\061","\083\051\084\115\112\101\084\052\104\111\077\078\112\105\057\052\083\105\118\061";"\116\104\112\085\085\082\061\061";"\073\120\104\057\089\047\061\061","\074\074\043\114\076\082\109\097","\083\101\057\075\112\082\061\061";"\066\103\047\076\054\100\113\099\081\109\082\061","\085\084\105\116\085\052\085\084\071\105\116\047\077\082\061\061","\109\067\043\049\120\087\100\097\118\111\054\075\083\068\077\070";"\076\087\073\106\106\099\090\061";"\049\083\043\081";"\104\120\114\116\112\120\057\107";"";"\078\065\083\090";"\119\084\082\051\106\115\085\086\106\069\108\049\120\105\089\075\070\066\090\061","\070\101\108\103\086\120\114\066";"\076\065\084\053\072\068\116\090\106\107\077\106\071\116\061\061","\110\073\082\055\083\076\087\122\110\082\061\061","\050\121\105\101\049\084\070\119\077\097\117\051";"\085\098\113\087\050\118\061\061","\121\107\065\080\076\102\118\061","\119\112\089\051\108\113\086\086";"\120\049\055\048\106\053\065\079\083\090\114\120\119\053\048\050\084\047\061\061","\110\073\056\069";"\082\122\083\097\067\086\052\086\048\067\075\055\066\116\069\052\079\122\088\084\055\082\061\061";"\071\119\114\109\072\114\119\049\052\043\098\076\052\051\107\069","\088\101\053\083","\104\047\112\073","\074\067\084\070\071\100\082\061";"\043\054\049\051","\120\121\048\047\112\077\080\120\085\074\077\104\084\070\116\089","\049\121\114\067\080\080\111\066\079\115\117\113\107\117\067\061","\099\106\113\100\103\088\067\061";"\119\111\084\102";"\053\105\100\112\054\090\067\120\102\069\102\065\054\118\061\061","\104\111\089\052\086\116\061\061","\104\111\089\073\119\111\090\061";"\119\069\088\061","\104\069\083\078\119\113\089\106\108\055\089\055\090\052\084\122\108\051\043\061","\111\066\049\079\098\109\073\048","\101\078\102\056\081\075\066\054\078\116\061\061","\099\114\048\117\107\122\115\110\115\069\110\089\113\111\066\087\047\119\115\089\076\105\104\085\107\070\086\054\085\116\061\061","\050\077\097\104\078\074\109\086\119\100\068\076\086\122\088\112";"\084\113\084\049\104\111\077\103\097\082\061\061";"\077\082\119\111\101\055\056\052\115\088\082\061";"\099\105\108\051\083\115\118\116\108\105\122\051\104\075\090\116\084\075\070\061","\104\111\077\102\104\120\075\073\083\105\088\061";"\104\053\122\072\083\072\075\084\120\090\068\057\108\106\089\118\099\055\047\061";"\048\078\116\108\115\047\099\118\107\084\119\086\077\081\056\101\078\085\066\068\073\103\112\061";"\075\048\081\101\050\082\061\061";"\112\111\074\090\098\070\114\116\111\109\066\065\114\070\043\098\078\049\110\103\084\082\072\052","\074\066\099\071\111\121\073\076\065\051\109\118\107\070\068\074\119\066\080\103","\057\103\079\099","\084\066\084\112\099\105\055\097\117\120\068\057\057\111\100\051\099\118\061\061";"\047\080\055\089\116\057\101\043\047\047\074\105\119\110\097\061";"\105\075\077\067\083\120\043\061","\102\053\085\077\121\097\117\065\100\100\043\072\083\047\050\049";"\054\070\068\115\078\103\113\072\043\065\106\085\115\104\079\122\086\099\108\099\050\068\074\061","\112\066\055\115\083\118\061\061","\073\054\109\097\114\097\079\051\071\105\118\088\079\086\072\073\119\070\047\121\084\117\082\061";"\112\051\065\065\070\082\061\061","\084\053\104\055\083\120\114\068\119\113\083\079","\052\088\112\074\070\115\106\056\113\106\047\061";"\100\084\085\104\100\118\052\050","\104\116\080\114\076\113\073\079\116\055\116\061","\049\082\099\072";"\083\051\089\078\083\118\061\061","\070\113\084\078\119\101\083\055";"\114\101\083\068\073\118\052\049\077\079\047\061"}local function J(J)return E[J+(-826361+860873)]end for J,G in ipairs({{620356-620355,502270+-502042},{864652+-864651,-272761-(-272799)},{340486+-340447;639065-638837}})do while G[-689534+689535]<G[-550177+550179]do E[G[790486+-790485]],E[G[882843+-882841]],G[-522884+522885],G[1039732+-1039730]=E[G[-304037+304039]],E[G[520140-520139]],G[-1006706-(-1006707)]+(956158-956157),G[-784021-(-784023)]-(-918450-(-918451))end end do local J=E local G=math.floor local r=string.len local O=string.char local Y={v=8199+-8183,k=-927616-(-927659),X=-532666-(-532674),n=353783-353769;E=-873506+873509;C=733183-733139;x=-862755-(-862777),e=-74116+74171;["\056"]=585937-585875;z=-399579-(-399620);B=-746236+746275,D=574275+-574266,I=-748580+748614,l=435093-435076,t=-535599+535647,s=227850+-227798,["\049"]=-382351-(-382386);["\050"]=779291+-779249;["\043"]=-247375+247431;H=631303-631299;i=-738636+738659;o=404984+-404978,u=-16196-(-16226);S=-707721+707746,["\057"]=-741556-(-741569),r=881874+-881817,K=-297653+297706,V=-221174-(-221200);g=332725-332675;Q=79950-79887;q=-470051+470089;d=808337-808277;J=-350508-(-350544),N=762040+-761995;L=650126-650124;R=734554+-734522;b=668540-668529;c=-375331+375349;h=-426150-(-426179);f=661842-661796;P=-487881-(-487939);["\048"]=-941718+941719;Z=-356738-(-356758);["\054"]=-962581+962640;a=-462635-(-462647);w=721151+-721124,m=-104002+104012,T=471702-471681;["\052"]=-412211+412262;p=-668746+668770,j=588280-588261,Y=-754614+754619;["\051"]=-316594+316648,O=689519+-689472;W=649099+-649059;A=565026+-564993;y=-59672-(-59687),U=-62584-(-62633);["\047"]=-449149+449149,M=-874365+874426;["\055"]=-255889+255926;["\053"]=-581231-(-581238);G=884255+-884224;F=-82849-(-82877)}local B=string.sub local w=table.insert local n=table.concat local l=type for E=-744974-(-744975),#J,686823-686822 do local M=J[E]if l(M)=="\115\116\114\105\110\103"then local l=r(M)local H={}local z=804949-804948 local W=-154200-(-154200)local P=808601-808601 while z<=l do local E=B(M,z,z)local J=Y[E]if J then W=W+J*(319871+-319807)^((-627170-(-627173))-P)P=P+(806259+-806258)if P==718640+-718636 then P=122158-122158 local E=G(W/(-20815-(-86351)))local J=G((W%(760542+-695006))/(-770954+771210))local r=W%(830112-829856)w(H,O(E,J,r))W=481889+-481889 end elseif E=="\061"then w(H,O(G(W/(-467166+532702))))if z>=l or B(M,z+(-162415-(-162416)),z+(481064+-481063))~="\061"then w(H,O(G((W%(1059932-994396))/(-860490-(-860746)))))end break end z=z+(298532-298531)end J[E]=n(H)end end end return(function(E,r,O,Y,B,w,n,R,m,P,X,i,z,G,g,k,W,j,l,o,H,M)R,g,i,H,W,k,o,X,P,l,z,m,j,G,M=function(E)M[E]=M[E]-(-51209-(-51210))if-421212-(-421212)==M[E]then M[E],l[E]=nil,nil end end,function(E,J)local r=W(J)local O=function(O,Y,B)return G(E,{O;Y,B},J,r)end return O end,function(E,J)local r=W(J)local O=function(...)return G(E,{...},J,r)end return O end,function()z=z+(616987+-616986)M[z]=-268945+268946 return z end,function(E)for J=825917+-825916,#E,-573306+573307 do M[E[J]]=M[E[J]]+(726612+-726611)end if O then local G=O(true)local r=B(G)r[J(415684-450080)],r[J(256973-291395)],r[J(-105580+71093)]=E,P,function()return 421985+1823059 end return G else return Y({},{[J(572645+-607067)]=P,[J(-1018428+984032)]=E,[J(290936+-325423)]=function()return 2007563-(-237481)end})end end,function(E,J)local r=W(J)local O=function(O,Y,B,w)return G(E,{O;Y;B;w},J,r)end return O end,function(E,J)local r=W(J)local O=function(O)return G(E,{O},J,r)end return O end,function(E,J)local r=W(J)local O=function(O,Y)return G(E,{O;Y},J,r)end return O end,function(E)local J,G=-606099-(-606100),E[824591-824590]while G do M[G],J=M[G]-(1024736-1024735),J+(404516-404515)if 103001+-103001==M[G]then M[G],l[G]=nil,nil end G=E[J]end end,{},-854777+854777,function(E,J)local r=W(J)local O=function(O,Y,B,w,n,l)return G(E,{O,Y;B;w;n;l},J,r)end return O end,function(E,J)local r=W(J)local O=function(O,Y,B,w,n)return G(E,{O;Y,B;w;n},J,r)end return O end,function(G,O,Y,B)local v,a,c,Ox,N,Gx,d,L,x,V,S,b,q,Yx,D,P,p,Bx,t,z,A,F,I,M,h,f,U,Jx,i,Q,e,s,n,rx,K,u,C,T,y,W,Z,Ex while G do if G<930986+7773315 then if G<762471+3111072 then if G<2446394-103081 then if G<143960-(-1038137)then if G<303836-(-721737)then if G<272191+626733 then if G<-180896+915626 then P=308308+-308307 i=849288+-849286 z=l[Y[-383525-(-383526)]]W=z(P,i)z=-350651-(-350652)M=W==z n=M G=M and 10729279-995282 or-309073+10610326 else G=153404+11962600 end else A=-513809+513810 F=p[A]b=F G=125991+15132320 end else if G<2050195-984352 then c=c+K h=c<=N f=not D h=f and h f=c>=N f=D and f h=f or h f=6232403-(-347162)G=h and f h=-1023495+6657595 G=G or h else G=3227934-(-292177)a=l[i]n=a end end else if G<-977576+2545663 then if G<739864-(-680269)then if G<-554399+1769673 then G=9018649-(-761370)M=nil l[Y[-456768+456773]]=n else L=i G=Z Z=nil W[L]=G G=801212+9768507 L=nil end else M=O W=J(921349-955648)G=true z=H()l[z]=G n=E[W]W=J(-316233+281804)G=n[W]W=H()l[W]=G i=H()G=o(10908099-93528,{})P=H()l[P]=G L=J(-566665+532329)G=false l[i]=G a=E[L]Z=j(2562375-(-435929),{i})L=a(Z)n=L G=L and-559776+1649647 or-403189+3923300 end else if G<1782125-(-166095)then W=827559+-827527 q=-235201-(-235203)z=l[Y[-87383+87386]]M=z%W P=l[Y[772384-772380]]I=850939+-850926 L=l[Y[-404466+404468]]h=l[Y[-62527-(-62530)]]d=h-M h=-911125+911157 U=d/h Q=I-U I=846963-846707 Z=q^Q a=L/Z i=P(a)P=4294385759-(-581537)W=i%P q=-847789+848045 G=-966876+14300788 i=-177054-(-177056)P=i^M z=W/P P=l[Y[-893704+893708]]Z=343027-343026 L=z%Z Z=-950208+4295917504 a=L*Z i=P(a)L=-364946-(-430482)P=l[Y[-336113+336117]]a=P(z)W=i+a i=-486181-(-551717)P=W%i a=W-P i=a/L L=-888772-(-889028)a=P%L W=nil Z=P-a L=Z/q P=nil q=801651+-801395 Z=i%q Q=i-Z q=Q/I z=nil Q={a;L;Z;q}M=nil q=nil a=nil l[Y[-194895+194896]]=Q i=nil Z=nil L=nil else l[z]=V G=l[z]G=G and 4884336-(-231790)or 107352+15226419 end end end else if G<-157883+3490812 then if G<3432931-441623 then if G<-346384+3202233 then if G<2214124-(-178088)then V=V+t K=not N n=V<=u n=K and n K=V>=u K=N and K n=K or n K=8158425-187637 G=n and K n=-730727+11733272 G=G or n else Q=Q+I Z=Q<=q d=not U Z=d and Z d=Q>=q d=U and d Z=d or Z d=-37969+12479866 G=Z and d Z=13576084-(-158054)G=G or Z end else L=not a W=W+i z=W<=P z=L and z L=W>=P L=a and L z=L or z L=6354578-(-957599)G=z and L z=7379806-848132 G=G or z end else if G<2111050-(-1043495)then n={}G=true l[Y[989683-989682]]=G G=E[J(835546-870035)]else W=l[Y[-306186-(-306192)]]z=W==M G=1048249+164798 n=z end end else if G<4048361-243123 then if G<773874+3013856 then if G<136427+3507106 then L=J(-157676+123270)a=n n=E[L]L=J(78044-112501)Z=J(-377612-(-343106))G=n[L]L=H()U=J(-925228-(-890722))l[L]=G n=E[Z]Z=J(-792986+758632)G=n[Z]Q=G I=E[U]Z=G G=I and 467438+15558838 or 250909+12606752 q=I else G=E[J(541876+-576251)]n={}end else W=404800+-404799 z=l[Y[-483720-(-483723)]]M=z~=W G=M and 2687566-895645 or 5181086-637344 end else if G<-513436+4355593 then A=nil h={}c=H()f={}T=J(-893551-(-859155))l[c]=h W=nil h=H()N=g(11552898-(-249710),{c,q;Q;i})K=H()l[h]=N a=nil N={}L=nil l[K]=N p=J(-914545+880103)D=J(-321124+286714)d=nil N=E[D]Z=nil s=l[K]v={[T]=s,[p]=A}D=N(f,v)l[z]=D N=m(15940311-894418,{K,c,U;q,Q,h})l[P]=N I=nil c=R(c)I=J(-72739+38359)h=R(h)i=R(i)K=R(K)Q=R(Q)i=H()q=R(q)U=R(U)h=J(936445+-970878)W={}U=14601617490549-(-170010)l[i]=W a=J(-190856-(-156380))W=E[a]a=J(-834010+799670)Z=l[z]a=W[a]x=1901075058194-(-259427)q=l[P]Q=q(I,U)L=Z[Q]a=a(W,L)f=J(-731327+696989)W=H()v=21204266222681-892359 l[W]=a I=J(-16676-17794)a=g(604868+3381834,{z,P})Z=J(921        NumberSequenceKeypoint.new(0.7,0),
        NumberSequenceKeypoint.new(1,1)
    }),
    Parent = Intro["Thumbnail"]
})
Intro["IntroFrame"] = Intro.MakeInstance("Frame", {
    Name = "IntroFrame",
    Position = UDim2.new(0.5, 0, -50, 0),
    BackgroundColor3 = Color3.new(0, 0, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    Size = UDim2.new(0, 200, 0, 200),
    BorderSizePixel = 0,
    Parent = Intro["GuiIntro"]
})
Intro["Size"] = Intro.MakeInstance("UIScale", {
    Parent = Intro["IntroFrame"]
})
Intro["ImagesContainer"] = Intro.MakeInstance("ScrollingFrame", {
    Size = Intro["IntroFrame"].Size,
    BackgroundTransparency = 1,
    CanvasSize = Intro["IntroFrame"].Size,
    ScrollBarThickness = 0,
    ClipsDescendants = true,
    Parent = Intro["IntroFrame"]
})
Intro["MoonHookIcon"] = Intro.MakeInstance("ImageLabel", {
    Size = Intro["IntroFrame"].Size,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, -30, 0),
    Image = custom_assets.MoonHookIcon,
    Parent = Intro["ImagesContainer"]
})
Intro["MoonHookText"] = Intro.MakeInstance("ImageLabel", {
    Size = Intro["IntroFrame"].Size,
    Position = UDim2.new(0, 0, 30, 0),
    BackgroundTransparency = 1,
    Image = custom_assets.MoonHookText,
    Parent = Intro["ImagesContainer"]
})
Intro["Stroke"] = Intro.MakeInstance("UIStroke", {
    Thickness = 0.3,
    Color = Color3.fromRGB(255, 255, 255),
    Parent = Intro["IntroFrame"]
})
Intro["IntroCredit"] = Intro.MakeInstance("TextLabel", {
    Text = "Intro Credits: Wild Wide",
    TextSize = 4.5,
    TextColor3 = Color3.fromRGB(255, 255, 255),
    Position = UDim2.new(0, 100, 0, 5),
    Parent = Intro["IntroFrame"]
})

task.spawn(function()
    local info = TweenInfo.new(2, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    local tween = TweenService:Create(Intro["IntroFrame"], info, {["Position"] = UDim2.new(0.5, 0, 0.5, 0)})
    local tween2 = TweenService:Create(Intro["Thumbnail"], info, {["ImageTransparency"] = 0})
    tween:Play()
    tween2:Play()
end)

task.wait(1.5)
task.spawn(function()
    local info = TweenInfo.new(1, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    local tween1 = TweenService:Create(Intro["MoonHookIcon"], info, {Position = UDim2.new(0, 0, 0, 0)})
    local tween2 = TweenService:Create(Intro["MoonHookText"], info, {Position = UDim2.new(0, 0, 0, 0)})
    tween1:Play()
    tween2:Play()
end)
task.wait(2.5)
task.spawn(function()
    local info = TweenInfo.new(0.7, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
    local tween = TweenService:Create(Intro["Size"], info, {Scale = 0})
    local tween2 = TweenService:Create(Intro["Thumbnail"], info, {["ImageTransparency"] = 1})
    tween:Play()
    tween2:Play()
end)
task.wait(0.3)
Intro["GuiIntro"]:Destroy()
